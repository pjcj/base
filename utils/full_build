#!/usr/bin/env zsh

# set -x

gobase() { cd ~/g/base || exit 1; }

cd ~

[[ -e .profile ]] && ! [[ -e .profile.local ]] && mv .profile .profile.local
ln -sf g/base/{utils,.abcde.conf,.gitconfig,.gitignore_global,.profile} .
ln -sf g/base/{.urlview,.vimrc,.Xdefaults,.vim,.tmux.conf,.tigrc} .
ln -sf g/base/{.zshenv,.zshrc,.wezterm.lua} .
[[ -d ~/.config ]] || mkdir ~/.config
ln -sf ~/g/base/.config/* ~/.config

[[ -e ~/.ssh/rc      ]] || ln -s ~/g/base/.ssh/rc ~/.ssh
[[ -e ~/.ssh/config  ]] || cp ~/g/base/.ssh/config ~/.ssh
[[ -d ~/.ssh/sockets ]] || mkdir -p ~/.ssh/sockets

gobase

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "$ZINIT_HOME/zinit.zsh"
zinit self-update
zinit update --parallel

curl -SL https://github.com/docker/cli/raw/master/contrib/completion/zsh/_docker \
    >| ~/g/base/zsh/functions/_docker
curl -SL https://raw.githubusercontent.com/docker/compose/master/contrib/completion/zsh/_docker-compose \
    >| ~/g/base/zsh/functions/_docker-compose
curl -SL https://raw.githubusercontent.com/docker/machine/master/contrib/completion/zsh/_docker-machine \
    >| ~/g/base/zsh/functions/_docker-machine
curl -SL https://raw.githubusercontent.com/perlpunk/shell-completions/master/zsh/_dzil \
    >| ~/g/base/zsh/functions/_dzil
if [[ "$(uname)" == Darwin ]]; then
    curl https://raw.githubusercontent.com/zsh-users/zsh/master/Completion/Unix/Command/_git \
        >| ~/g/base/zsh/functions/_git
fi
rm -f ~/.zcompdump; autoload -Uz compinit && compinit -i

LOCALCHECKOUT=~/.tmux/plugins/tpm
if [ ! -d $LOCALCHECKOUT ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
else
    pushd $LOCALCHECKOUT
    git pull origin master
    popd
fi

~/.tmux/plugins/tpm/bin/install_plugins
~/.tmux/plugins/tpm/bin/update_plugins all
~/.tmux/plugins/tpm/bin/clean_plugins

bat cache --clear
bat cache --build

mkdir -p ~/.local/share/nvim/backup

create_wezterm_terminfo() {
    tempfile=$(mktemp) \
        && curl -o $tempfile https://raw.githubusercontent.com/wez/wezterm/main/termwiz/data/wezterm.terminfo \
        && tic -x -o ~/.terminfo $tempfile \
        && rm $tempfile
}

fixup_fzf_completion() {
    for fzfcomp in "$(find $HOMEBREW_CELLAR -name 'completion.zsh')"; do
        if ! grep -q "emulate -L zsh" $fzfcomp; then
            perl -pi -e 's/fzf-completion\(\) \{\K/\n  emulate -L zsh/' \
                $fzfcomp
        fi
    done
}

if [[ "$(uname)" == Darwin ]]; then
    if which brew >&/dev/null; then
        brew update
        brew upgrade
        brew upgrade --cask
        brew bundle dump --file=Brewfile --force
    else
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        brew bundle install --file=Brewfile
    fi

    create_wezterm_terminfo
    fixup_fzf_completion

    cargo install devicon-lookup

    pip3=pip3
elif [[ "$(uname)" == FreeBSD ]]; then
    sudo pkg update
    sudo pkg upgrade
    sudo pkg install          \
        base64                \
        bash                  \
        bat                   \
        codespell             \
        exa                   \
        fd-find               \
        fzf                   \
        git                   \
        git-delta             \
        go                    \
        hs-ShellCheck         \
        multitail             \
        neovim                \
        node                  \
        npm-node18            \
        opendircolors         \
        pigz                  \
        pixz                  \
        py39-pip              \
        py39-powerline-status \
        py39-proselint        \
        py39-ranger           \
        py39-yamllint         \
        ripgrep               \
        rust                  \
        selene                \
        shellharden           \
        shfmt                 \
        thefuck               \
        tig                   \
        tmux                  \
        universal-ctags       \
        vim                   \
        wget                  \
        zsh

    pip3=pip
else
    sudo locale-gen en_GB.UTF-8 en_US.UTF-8
    sudo update-locale

    sudo apt-get autoremove --purge
    sudo apt-get clean
    sudo aptitude update
    sudo aptitude full-upgrade

    if [[ -n $WSL_DISTRO_NAME ]]; then
        brewfile=Brewfile.wsl
    else
        brewfile=Brewfile.linux
    fi

    if which brew >&/dev/null; then
        brew update
        brew upgrade
        brew bundle dump --file=$brewfile --force
    else
        sudo apt-get install build-essential procps curl file git
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
        brew bundle install --file=$brewfile
    fi

    pip3=pip3
    # sudo aptitude -y install golang python-pip python3-dev python3-pip cargo libncurses-dev libncursesw5-dev

    cargo install devicon-lookup

    # $pip3 install --upgrade --user pip

    create_wezterm_terminfo
    fixup_fzf_completion
fi

if [[ "$EDITOR" == "nvim" ]]; then
    # $EDITOR --headless "+Lazy! sync" +qall
    # $EDITOR --headless "+TSUpdateSync" +qall
    go install github.com/nametake/golangci-lint-langserver@latest
    go install github.com/client9/misspell/cmd/misspell@latest
fi

if [[ "$(uname)" == FreeBSD ]]; then
    sudo npm install -g fixjson
    sudo npm update -g
else
    $pip3 install --upgrade --user \
        thefuck \
        docker-compose \
        mdformat-gfm

    npm install -g fixjson
    exec npm update -g
fi
