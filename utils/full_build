#!/usr/bin/env zsh

# set -x

gobase() { cd ~/g/base || exit 1; }

cd ~

if [ ! -e .tmux.conf ]; then
    ln -s g/base/{utils,.abcde.conf,.gitconfig,.profile,.urlview} ~
    ln -s g/base/{.vimrc,.Xdefaults,.vim,.nvim,.tmux.conf,.tigrc} ~
    [[ -d ~/.config ]] || mkdir ~/.config
    ln -s ~/g/base/.config/* ~/.config
    ( cd ~ && ln -s g/base/.zshrc* . )

    sudo aptitude install gawk
    curl -sL --proto-redir -all,https \
        https://raw.githubusercontent.com/zplug/installer/master/installer.zsh \
        | zsh

    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

[[ -e ~/.ssh/rc      ]] || ln -s ~/g/base/.ssh/rc ~/.ssh
[[ -e ~/.ssh/config  ]] || cp ~/g/base/.ssh/config ~/.ssh
[[ -d ~/.ssh/sockets ]] || mkdir -p ~/.ssh/sockets

source ~/.zplug/init.zsh
zplug clear
zplug update

gobase

curl -SL https://github.com/docker/cli/raw/master/contrib/completion/zsh/_docker \
    >| ~/g/base/zsh/functions/_docker
curl -SL https://raw.githubusercontent.com/docker/compose/master/contrib/completion/zsh/_docker-compose \
    >| ~/g/base/zsh/functions/_docker-compose
curl -SL https://raw.githubusercontent.com/docker/machine/master/contrib/completion/zsh/_docker-machine \
    >| ~/g/base/zsh/functions/_docker-machine
curl -SL https://raw.githubusercontent.com/perlpunk/shell-completions/master/zsh/_dzil \
    >| ~/g/base/zsh/functions/_dzil
if [[ "$(uname)" == Darwin ]]; then
    curl https://raw.githubusercontent.com/zsh-users/zsh/master/Completion/Unix/Command/_git \
        >| ~/g/base/zsh/functions/_git
fi
rm -f ~/.zcompdump; autoload -Uz compinit && compinit -i

LOCALCHECKOUT=~/.tmux/plugins/tpm
if [ ! -d $LOCALCHECKOUT ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
else
    pushd $LOCALCHECKOUT
    git pull origin master
    popd
fi

~/.tmux/plugins/tpm/bin/install_plugins
~/.tmux/plugins/tpm/bin/update_plugins all
~/.tmux/plugins/tpm/bin/clean_plugins

if [[ "$(uname)" == Darwin ]]; then
    if which brew >&/dev/null; then
        brew update
        brew upgrade
        brew upgrade --cask
        brew bundle dump --file=Brewfile --force
    else
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew bundle install --file=Brewfile
    fi

    fzfcomp=/usr/local/opt/fzf/shell/completion.zsh
    if ! grep -q "emulate -L zsh" $fzfcomp; then
        perl -pi -e 's/fzf-completion\(\) \{\K/\n  emulate -L zsh/' \
            $fzfcomp
    fi

    if [ ! which rustup >&/dev/null ]; then
        curl https://sh.rustup.rs -sSf | sh
    else
        rustup update
    fi
    cargo install devicon-lookup

    pip3=pip3
elif [[ "$(uname)" == FreeBSD ]]; then
    sudo pkg install          \
        bat                   \
        diff-so-fancy         \
        fd-find               \
        fzf                   \
        highlight             \
        multitail             \
        neovim                \
        node                  \
        pigz                  \
        pixz                  \
        py36-pip              \
        py36-powerline-status \
        py36-ranger           \
        ripgrep               \
        thefuck               \
        tig                   \
        universal-ctags       \
        wget                  \
        yarn                  \
        zsh

    sudo pkg upgrade
    pip3=pip
else
    if which brew >&/dev/null; then
        brew update
        brew upgrade
        brew upgrade --cask
        brew bundle dump --file=Brewfile.linux --force
    else
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
        brew bundle install --file=Brewfile.linux
    fi

    pip3=pip3
    sudo aptitude -y install golang python-pip python3-dev python3-pip cargo libncurses-dev libncursesw5-dev

    cargo install devicon-lookup

    $pip3 install --upgrade --user pip

    # sudo gem install colorls
    # sudo gem update colorls

    $pip3 install --upgrade --user thefuck
    $pip3 install --upgrade --user docker-compose
fi

if [[ "$EDITOR" == "nvim" ]]; then
    $pip3 install --upgrade --user neovim pynvim
    $pip3 install --upgrade --user vim-vint proselint
    $pip3 install --upgrade --user git+git://github.com/powerline/powerline

    # denite
    $pip3 install --upgrade --user typing

    rm -f vimplug.lock
    $EDITOR -c PlugUpgrade                    -c qa
    $EDITOR -c PlugClean                      -c qa
    $EDITOR -c PlugInstall                    -c qa
    $EDITOR -c PlugUpdate                     -c qa
    $EDITOR -c PlugSnapshot\ vimplug.lock     -c qa

    $EDITOR -c UnicodeDownload                -c qa

    yarn global add neovim
    $EDITOR -c "CocInstall coc-tag coc-emoji" -c qa
fi

if [[ $(uname) == Linux ]]; then
    gobase
    brew install ghq
    build_all
fi

bat cache --clear
bat cache --build
