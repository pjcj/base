[user]
        name = Paul Johnson
        email = paul@pjcj.net
[color]
        ui = auto
[color.grep]
        context = blue
        filename = cyan
        function = yellow
        linenumber = red
        match = green
        separator = magenta
[pack]
        threads = 0
[diff]
        renamelimit = 0
        renames = copies
        mnemonicprefix = true
[mergetool "gvimdiff3"]
        cmd = gvim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "vimdiff3"]
        cmd = vim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[merge]
        tool = vimdiff3
        conflictstyle = diff3
[alias]
        distclean = clean -dxf
        st = status -sb
        ci = commit
        co = checkout
        br = branch
        bc = branch-current
        bfd = branch-full-delete
        alias = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort
        lc = log ORIG_HEAD.. --stat --no-merges
        whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
        graphviz = "!f() { echo 'digraph git {'; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g'; echo '}'; }; f"
        lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
        lgm = "!f() { git lg $( git reflog | awk '{print $1}' ); }; f"
        lga = "!f() { git lg $( git fsck --no-reflog | awk '/dangling commit/ {print $3}' ); }; f"
        lgn = "!f() { git log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative $@ | git name-rev --stdin --name-only; }; f | less"
        vgc = repack -f -a -d --depth=250 --window=250
        nvgc = !ionice -n7 nice -n20 git vgc
        amend = commit -a --amend -C HEAD
        diffwords = diff --word-diff
        praise = blame -w
        archeology = blame -w -M -C -n
        wtf = !git-wtf
        latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short)  %(authorname)'
        ignore = !git update-index --assume-unchanged
        unignore = !git update-index --no-assume-unchanged
        ignored = !git ls-files -v | grep "^[[:lower:]]"
        bmv = branch -f
        omv = origin-branch-move
[github]
        user = pjcj
[push]
        default = current
[url "git://github.com/"]
        insteadOf = github:
[rerere]
        enabled = true
        autoupdate = true
[ghq]
        root = ~/g/ghq
[include]
        path = .gitconfig.local
