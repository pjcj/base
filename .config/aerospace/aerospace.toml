# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  "exec-and-forget borders active_color=0xffffffff inactive_color=0xff494d64 width=6.0",
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = "tiles"

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = "auto"

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ["move-mouse monitor-lazy-center"]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

[workspace-to-monitor-force-assignment]
1 = ["main"]
2 = ["main"]
3 = ["main"]
4 = ["main"]
5 = ["main"]
6 = [1, "main"]
7 = [1, "main"]
8 = [3, "main"]
9 = ["built-in", "main"]

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = "qwerty"

[key-mapping.key-notation-to-key-code]
"/" = "minus"
"." = "period"
"," = "comma"
# "=" = "backtick"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 3
inner.vertical = 3
outer.left = 3
outer.bottom = 3
outer.top = 3
outer.right = 3

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = "focus left"
alt-j = "focus down"
alt-k = "focus up"
alt-l = "focus right"

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = "move left"
alt-shift-j = "move down"
alt-shift-k = "move up"
alt-shift-l = "move right"

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-keypadMinus = "resize smart -50"
alt-keypadPlus = "resize smart +50"

ctrl-left = "workspace --wrap-around prev"
ctrl-right = "workspace --wrap-around next"

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = "workspace-back-and-forth"
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = "move-workspace-to-monitor --wrap-around next"

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-comma = "mode service"
alt-slash = "mode op"

[mode.op.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
1 = ["workspace 1", "mode main"]
2 = ["workspace 2", "mode main"]
3 = ["workspace 3", "mode main"]
4 = ["workspace 4", "mode main"]
5 = ["workspace 5", "mode main"]
6 = ["workspace 6", "mode main"]
7 = ["workspace 7", "mode main"]
8 = ["workspace 8", "mode main"]
9 = ["workspace 9", "mode main"]

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
shift-1 = ["move-node-to-workspace 1", "mode main"]
shift-2 = ["move-node-to-workspace 2", "mode main"]
shift-3 = ["move-node-to-workspace 3", "mode main"]
shift-4 = ["move-node-to-workspace 4", "mode main"]
shift-5 = ["move-node-to-workspace 5", "mode main"]
shift-6 = ["move-node-to-workspace 6", "mode main"]
shift-7 = ["move-node-to-workspace 7", "mode main"]
shift-8 = ["move-node-to-workspace 8", "mode main"]
shift-9 = ["move-node-to-workspace 9", "mode main"]

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
slash = "layout tiles horizontal vertical"
period = "layout accordion horizontal vertical"
comma = "mode service"

f = ["fullscreen", "mode main"]
r = ["reload-config", "mode main"]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ["reload-config", "mode main"]
r = ["flatten-workspace-tree", "mode main"] # reset layout
f = [
  "layout floating tiling",
  "mode main",
] # Toggle between floating and tiling layout
backspace = ["close-all-windows-but-current", "mode main"]

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ["join-with left", "mode main"]
alt-shift-j = ["join-with down", "mode main"]
alt-shift-k = ["join-with up", "mode main"]
alt-shift-l = ["join-with right", "mode main"]

down = "volume down"
up = "volume up"
shift-down = ["volume set 0", "mode main"]

[[on-window-detected]]
if.app-name-regex-substring = "WezTerm"
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-name-regex-substring = "Ghostty"
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-name-regex-substring = "Firefox"
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-name-regex-substring = "Safari"
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-name-regex-substring = "Slack"
run = "move-node-to-workspace 8"

[[on-window-detected]]
if.app-name-regex-substring = "Signal"
run = "move-node-to-workspace 8"

[[on-window-detected]]
if.app-name-regex-substring = "Python"
run = "move-node-to-workspace 5"

[[on-window-detected]]
if.app-name-regex-substring = "DBeaver"
run = ["layout tiling", "move-node-to-workspace 5"]

[[on-window-detected]]
if.app-name-regex-substring = "1Password"
run = ["layout floating"]

[[on-window-detected]]
if.app-name-regex-substring = "zoom.us"
run = ["layout floating", "move-node-to-workspace 8"]
